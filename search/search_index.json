{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"BYOS - Bring Your Own Satellite","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"cfs/","title":"Core Flight System","text":"<p>``` docker pull hackethos/cfs</p> <p><pre><code>![alt text](image-11.png)\n</code></pre> docker run --cap-add CAP_SYS_RESOURCE --net=openc3-cosmos-network --name cfs -p1234:1234/udp -p1235:1235 --rm hackethos/cfs <pre><code>![alt text](image-12.png)\n\n\n![alt text](image-13.png)\n\n\n\n```docker network inspect openc3-cosmos-network```\n\n\ncFS Container IP\n![alt text](image-14.png)\n\n\n\nOperator Container IP\n![alt text](image-15.png)\n</code></pre> ./openc3.sh cli generate plugin CFS <pre><code>![alt text](image-16.png)\n</code></pre> cd openc3-cosmos-cfs/ ../openc3.sh cli generate target CFS <pre><code>![alt text](image-17.png)\n</code></pre> cd targets/CFS/cmd_tlm/ rm * touch cfs_cmds.txt cfs_tlm.txt to_lab_cmds.txt <pre><code>![alt text](image-18.png)\n\n\nOpen the file ```to_lab_cmds.txt``` and insert the following content.\n</code></pre> COMMAND CFS TO_LAB_ENABLE BIG_ENDIAN \"Enable telemetry\"   #                   NAME      BITS TYPE   min VAL     max VAL    init VAL  DESCRIPTION   APPEND_ID_PARAMETER STREAM_ID  16  UINT   0x1880      0x1880     0x1880    \"Stream ID\"     FORMAT_STRING \"0x%04X\"   APPEND_PARAMETER    SEQUENCE   16  UINT   0xC000      MAX_UINT16 0xC000    \"\"     FORMAT_STRING \"0x%04X\"   APPEND_PARAMETER    PKT_LEN    16  UINT   0x0001      0xFFFF     0x0012    \"length of the packet\"   APPEND_PARAMETER    CMD_ID      8  UINT   6           6          6         \"\"   APPEND_PARAMETER    CHECKSUM    8  UINT   MIN_UINT8   MAX_UINT8  0x98      \"\"     FORMAT_STRING \"0x%2X\"   APPEND_PARAMETER    DEST_IP   144  STRING \"127.0.0.1\"                      \"Destination IP, i.e. 172.16.9.112, pc-57\" <pre><code>Next, open the file ```cfs_cmds.txt``` and insert the following content.\n</code></pre> COMMAND CFS NOOP BIG_ENDIAN \"NOOP Command\"   # cFS primary header   APPEND_ID_PARAMETER    STREAM_ID   16   UINT   0x1882      0x1882      0x1882      \"Packet Identification\"       FORMAT_STRING \"0x%04X\"   APPEND_PARAMETER       SEQUENCE    16   UINT   MIN_UINT16  MAX_UINT16  0xC000      \"\"       FORMAT_STRING \"0x%04X\"   APPEND_PARAMETER       PKT_LEN     16   UINT   0x0001      0x0001      0x0001      \"Packet length\"   # cFS CMD secondary header   APPEND_PARAMETER       CMD_ID       8   UINT   0           0           0           \"\"   APPEND_PARAMETER       CHECKSUM     8   UINT   MIN_UINT8   MAX_UINT8   MIN_UINT8   \"\"</p> <p>COMMAND CFS RESET BIG_ENDIAN \"Reset Counters Command\"   APPEND_ID_PARAMETER    STREAM_ID   16   UINT   0x1882      0x1882      0x1882      \"Packet Identification\"       FORMAT_STRING \"0x%04X\"   APPEND_PARAMETER       SEQUENCE    16   UINT   MIN_UINT16  MAX_UINT16  0xC000      \"\"       FORMAT_STRING \"0x%04X\"   APPEND_PARAMETER       PKT_LEN     16   UINT   0x0001      0x0001      0x0001      \"Packet length\"   APPEND_PARAMETER       CMD_ID       8   UINT   1           1           1           \"\"   APPEND_PARAMETER       CHECKSUM     8   UINT   MIN_UINT8   MAX_UINT8   MIN_UINT8   \"\"</p> <p>COMMAND CFS PROCESS BIG_ENDIAN \"Process Command\"   APPEND_ID_PARAMETER    STREAM_ID   16   UINT   0x1882      0x1882      0x1882      \"Packet Identification\"       FORMAT_STRING \"0x%04X\"   APPEND_PARAMETER       SEQUENCE    16   UINT   MIN_UINT16  MAX_UINT16  0xC000      \"\"       FORMAT_STRING \"0x%04X\"   APPEND_PARAMETER       PKT_LEN     16   UINT   0x0001      0x0001      0x0001      \"Packet length\"   APPEND_PARAMETER       CMD_ID       8   UINT   2           2           2           \"\"   APPEND_PARAMETER       CHECKSUM     8   UINT   MIN_UINT8   MAX_UINT8   MIN_UINT8   \"\" <pre><code>Finally, you need to open the file ```cfs_tlm.txt``` and insert the following content\n</code></pre> TELEMETRY CFS HK BIG_ENDIAN \"housekeeping telemetry\"   #                NAME       BITS  TYPE    ID      DESCRIPTION   APPEND_ID_ITEM   STREAM_ID   16   UINT    0x0883  \"Stream ID\"     FORMAT_STRING \"0x%04X\"   APPEND_ITEM      SEQUENCE    16   UINT            \"Packet Sequence\"     FORMAT_STRING \"0x%04X\"   APPEND_ITEM      PKT_LEN     16   UINT            \"Length of the packet\"   # telemetry secondary header   APPEND_ITEM      SECONDS     32   UINT            \"\"         UNITS Seconds sec   APPEND_ITEM      SUBSECS     16   UINT            \"\"         UNITS Milliseconds ms   # some bytes not known for what   APPEND_ITEM      SPARE2ALIGN 32   UINT            \"Spares\"   # payload   APPEND_ITEM      CMD_ERRS     8   UINT            \"Command Error Counter\"   APPEND_ITEM      CMD_CNT      8   UINT            \"Command Counter\"   # spare / alignment   APPEND_ITEM      SPARE       16   UINT            \"Spares\" ```</p> <p></p> <p>Download cFS Plugin</p>"},{"location":"cosmos/","title":"OpenC3 Cosmos","text":"<p><pre><code>sudo apt update &amp;&amp; sudo apt dist-upgrade -y\n</code></pre> </p> <pre><code>sudo apt install docker-compose -y\n</code></pre> <p></p> <pre><code>sudo groupadd docker\n\nsudo usermod -aG docker $USER\n</code></pre> <p>Log out and Log back in...</p> <p>open terminal and run: <code>docker version</code></p> <p></p> <pre><code>git clone https://github.com/OpenC3/cosmos.git\n</code></pre> <p></p> <pre><code>cd cosmos\n</code></pre> <pre><code>nano compose.yaml\n</code></pre> <p>Line 161 <pre><code>  openc3-operator:\n    user: \"${OPENC3_USER_ID:-1001}:${OPENC3_GROUP_ID:-1001}\"\n    image: \"${OPENC3_REGISTRY}/${OPENC3_NAMESPACE}/openc3-operator${OPENC3_IMAGE_SUFFIX}:${OPENC3_TAG}\"\n    restart: \"unless-stopped\"\n    # ports:\n    #  - \"127.0.0.1:7779:7779\" # Open port for the demo router\n    depends_on:\n</code></pre></p> <p></p> <pre><code>  openc3-operator:\n    user: \"${OPENC3_USER_ID:-1001}:${OPENC3_GROUP_ID:-1001}\"\n    image: \"${OPENC3_REGISTRY}/${OPENC3_NAMESPACE}/openc3-operator${OPENC3_IMAGE_SUFFIX}:${OPENC3_TAG}\"\n    restart: \"unless-stopped\"\n    ports:\n    - \"1235:1235/udp\"\n    #  - \"127.0.0.1:7779:7779\" # Open port for the demo router\n    depends_on:\n</code></pre> <p></p> <p><code>CRTL + x</code>, then <code>y</code> to save.</p> <pre><code>./openc3.sh run\n</code></pre> <p></p> <p></p> <p><code>docekr ps</code></p> <p></p> <p><code>localhost:2900</code></p> <p>You will be prompted to set a password. Feel free to chose any password you would like. Just make sure to remember it.</p> <p></p> <p>After getting logged in...</p> <p></p> <p>In this lab, you will be deploying OpenC3 COSMOS to act as both your mission control center and ground station and then learning about some of its capabilities. </p> OpenC3 COSMOS <p>To get started, you need to open a terminal and navigate to the <code>~/ICSS-2024.03/Cosmos</code> directory and then executing the ```./openc3.sh script using the commands down below:</p> <pre><code>cd ~/ICSS-2024-03/Cosmos\nsudo ./openc3.sh run\n</code></pre> Starting COSMOS <p>In a browser, navigate to <code>http://localhost:2900</code> and if prompted for a password, choose a password of your choice. If you are not prompted to choose a password, try <code>password</code>.</p> Choose Password if Prompted Successfully Logged Into COSMOS"},{"location":"cosmos/#getting-the-lay-of-the-land","title":"Getting the lay of the land","text":"<p>Now that you have logged into COSMOS, it is time to get familiar with it and what it is capable of doing.</p> <p>On the left side of the screen, you will find the primary navigation menu as shown below:</p> COSMOS Sidebar Navigation <p>In the main section of your window you will the <code>CmdTlmServer</code> interface that has a row of options called <code>Interfaces</code>,<code>Tagrets</code>,<code>Cmd packets</code>,<code>Tlm packets</code>,<code>Routers</code>, and <code>Status</code>.</p> COSMOS CmdTlmServer Interface <p>The current deployment of COSMOS includes a demonstration plugin that has four interfaces, two of which will have a status of <code>Connected</code>.</p> Connected Interfaces with Cmd and Tlm Packets <p>If you see that the packet counts for both <code>Cmd pkts</code> and <code>Tlm pkts</code> increasing, everyhing is working as expected and data is coming in and from your COSMOS instance. YOu can also look below the <code>CmdTlmServer</code> window to the <code>Log Messages</code> console as shown below to see that data is flowing.</p> COSMOS Log Messge Console <p>!!! Notice !!!</p> <p>The rest of this lab is going to be instructor led to showcase some of the abilities of COSMOS. If you are not doing the labs live, each of the steps needed in future labs will be clearly defined, so you will be able to follow along at that time, but you are encouraged to follow along with the video of this portion of the class. </p>"}]}